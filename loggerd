;; TODO: Version 1 of loggerd will instead use direct writes to ini files to track activity across networks. 
;; This will create a file that we can call back with /filter later. 
;; We threw out the old todo stuff, that was complicated. We can parse strings later when reading from the file
;; Section Examples: Network.msg (holds last message seen), Network.act (holds last action seen), Network.addr (holds last address seen at)

;; Keeping this part, we want to make sure this broadcasts every so often. But since /seen isn't YET implemented...well yeah.
#ldmaint off
on ^*:start: { 
  ;echo -a 4,6LOGGERd IS DISABLED, you will not be able to use /seen during this session
  ;timer 1000 3600 /echo -s 4,6LOGGERd IS DISABLED, you will not be able to use /seen during this session
}
#ldmaint end

#loggerdmain on

;As a performance booster we've removed the flushini from the ontext event. This should keep mIRC from locking up
;To ensure new text events get parsed, we're also running a timer so that the inis get flushed every 15s
;This should decrease the disk I/O load of the script significantly, and we can lower the time for more up to date logging
alias initloggerd {
  window -dDe2k0 @Seen 
  var %inifile [ $network $+ .ini ]
  flushini %inifile
  timer 0 15 /flushini %inifile
}

on ^*:connect: { 
  var %inifile [ $network $+ .ini ]
  initloggerd
}

on ^*:text:*:*: { 
  var %inifile [ $network $+ .ini ]
  writeini -n [ %inifile [ $+($network,.,act) ] $+(LASTACT,:,$nick) Messaged $target at $adate $asctime($ctime,hh:nn:ss) ]
  writeini -n [ %inifile [ $+($network,.,msg) ] $+(MSG,_,$nick) $1- ]
  writeini -n [ %inifile [ $+($network,.,msg) ] $+($target,_,datetime) $nick $adate $asctime($ctime,hh:nn:ss) ]
  writeini -n [ %inifile [ $+($network,.,msg) ] $+($target,_,raw) $nick $adate $asctime($ctime,hh:nn:ss) $target $1- ]
  writeini -n [ %inifile [ $+($network,.,addr) ] $nick $address($nick,0) $address($nick,2) $address($nick,5) *!*@* ]
  ;;;hadd -m $network $+($target,.,$nick) $adate $asctime($ctime,hh:nn:ss) $target $1-
  ;;;hadd -m $network $+(address,.,$nick) $address($nick,2)
}

;WE STILL FLUSH THE INIS ON LESS COMMON EVENTS! This is to make sure that things stay up to date as we're seeing things happen

on ^*:join:#: {
  var %inifile [ $network $+ .ini ]
  writeini -n %inifile [ $+($network,.,addr) ] [ $nick $address($nick,0) $address($nick,2) $address($nick,5) ]
  writeini -n %inifile [ $+($network,.,act) ] [ $+(LASTACT,:,$nick) Joined $target at $adate $asctime($ctime,hh:nn:ss) ]
  flushini %inifile
  ;hadd -m $network $+($target,.,$nick) $adate $asctime($ctime,hh:nn:ss) $target Joined
  ;hadd -m $network $+(address,.,$nick) $address($nick,2)
}

on ^*:part:#: {
  var %inifile [ $network $+ .ini ]
  writeini -n %inifile [ $+($network,.,addr) ] [ $nick $address($nick,0) $address($nick,2) $address($nick,5) ]
  writeini -n %inifile [ $+($network,.,act) ] [ $+(LASTACT,:,$nick) Parted $target at $adate $asctime($ctime,hh:nn:ss) with message $1- ]
  flushini %inifile
  ;hadd -m $network $+($target,.,$nick) $adate $asctime($ctime,hh:nn:ss) $target Parted 
  ;hadd -m $network $+(address,.,$nick) $address($nick,2)
}

on ^*:quit: {
  var %inifile [ $network $+ .ini ]
  writeini -n %inifile [ $+($network,.,addr) ] [ $nick $address($nick,0) $address($nick,2) $address($nick,5) ] 
  writeini -n %inifile [ $+($network,.,act) ] [ $+(LASTACT,:,$nick) Quit at $adate $asctime($ctime,hh:nn:ss) with message $1- ]
  flushini %inifile
  ;hadd -m $network $+($target,.,$nick) $adate $asctime($ctime,hh:nn:ss) Quit Server $1-
  ;hadd -m $network $+(address,.,$nick) $address($nick,2)
}

on ^*:nick: {
  var %inifile [ $network $+ .ini ]
  writeini -n %inifile [ $+($network,.,addr) ] [ $nick $address($newnick,0) $address($newnick,2) $address($newnick,5) ] 
  writeini -n %inifile [ $+($network,.,act) ] [ $+(LASTACT,:,$nick) Changed nick to $newnick $adate $asctime($ctime,hh:nn:ss) ]
  flushini %inifile
  ;hadd -m $network $+($target,.,$nick) $adate $asctime($ctime,hh:nn:ss) Nick $newnick
  ;hadd -m $network $+(address,.,$nenick) $address($newnick,2)
}

on ^*:mode:#: {
  var %inifile [ $network $+ .ini ]
  writeini -n %inifile [ $+($network,.,modes) $chan $nick sets mode $1- at $adate $asctime($ctime,hh:nn:ss) ] 
  flushini %inifile
}

on ^*:kick:#: {
  var %inifile [ $network $+ .ini ]
  writeini -n %inifile [ $+($network,.,act) $+(LASTACT,:,$nick) kicked $knick $1- at $adate $asctime($ctime,hh:nn:ss) ] 
  writeini -n %inifile [ $+($network,.,act) $+(LASTACT,:,$knick) got kicked by $nick $1- at $adate $asctime($ctime,hh:nn:ss) ] 
  flushini %inifile
}

;Flushing on Exit is required. 
on ^*:exit: { 
  var %inifile [ $network $+ .ini ]
  flushini %inifile
}

alias seen {
  var %inifile [ $network $+ .ini ]
  flushini %inifile
  sw
  /filter -cfnwp %inifile @Seen $+(*,$1-,*)
  /titlebar @Seen [ $network [ $+(Query:,*,$1-,*) Found: $filtered matches ] ]
}
alias sw {
  window -adDe2ik0rz @Seen /seen 
}
#loggerdmain end
