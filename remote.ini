[script]
n0=#ZNCAuth on
n1=;;Automated authentication code. Cleaned up for git upload...changed hardcoded params to variables.
n2=raw 464:*: {
n3=  if ($server == %BouncerSvr) {
n4=    ;;Changed hardcoded user/password to a referenced variable for Github upload.
n5=    quote pass $+(%BouncerUsr,:,$decode(%BouncerPwd,m))
n6=    echo -a <---DEBUG---> Got connect to bouncer
n7=    timestamp -e on
n8=    set %network $scon(0)
n9=    if (%cooldown == 1) {
n10=      echo -a 6,4Blocked Bootstrap Command. Cooldown Active
n11=      halt
n12=    }
n13=    /timer 1 2 /bootstrap
n14=  }
n15=}
n16=#ZNCAuth end
n17=
n18=#wolfgame on
n19=on ^*:text:*:##werewolf: { if ($nick == lykos) { /wn <#lykos> $1- } }
n20=
n21=alias wn {
n22=  window -dDe2k0 @wolf /wn
n23=  aline -p @wolf $$1-
n24=}
n25=
n26=#wolfgame end
n27=
n28=#ZNCAutoCon on
n29=;;Bootstrap Autoconnect.
n30=
n31=alias bootstrap {
n32=  ;;Check to see if we've been called recently
n33=
n34=  set -u60 %cooldown 1
n35=  echo -a Node 0
n36=  ;;This performs the basic autoconnect and spawns the new server connections
n37=
n38=  if ($scon(1).network == freenode) {
n39=    echo -a Node 1
n40=    server -m %BouncerSvr %BouncerPort $+(%BouncerUsr,/ShadowNet:,$decode(%BouncerPwd,m))
n41=    echo -a Node 2
n42=    server -m %BouncerSvr %BouncerPort $+(%BouncerUsr,/Snoonet:,$decode(%BouncerPwd,m))
n43=    echo -a Node 3
n44=    server -m %BouncerSvr %BouncerPort $+(%BouncerUsr,/Systemnet:,$decode(%BouncerPwd,m))
n45=    echo -a Node 4
n46=    server -m %BouncerSvr %BouncerPort $+(%BouncerUsr,/TGR:,$decode(%BouncerPwd,m))
n47=    echo -a Node 5
n48=    timer 1 5 /echo -a 5Launched timers to close off commonly spawned windows that are unnecessary
n49=    timer 1 15 /scid -a /close -m *ctcpflood
n50=    timer 1 119 /scid -a /znc clearallchannelbuffers
n51=    timer 1 120 /scid -a /close -m *status
n52=
n53=  }
n54=}
n55=on ^*:disconnect: {
n56=  noop NOP NOP NOP NOP NOP
n57=}
n58=#ZNCAutoCon end
n59=
n60=#MassCommands on
n61=alias mping {
n62=  var %sel $sline($chan,0)
n63=  var %del 1
n64=  while (%sel > 0) {
n65=    /timer 1 %del /ctcp $sline($chan,%sel) PING
n66=    dec %sel 
n67=    inc %del
n68=  }
n69=}
n70=#MassCommands end
n71=
n72=#utilities on
n73=
n74=alias hdump {
n75=  var %i $hget($$1,0).item
n76=  while (%i > 0) {
n77=    echo -a $1 > $+(#,%i) > $hget($1,%i).item > $hget($1,%i).data
n78=    dec %i
n79=  }
n80=}
n81=
n82=alias htables {
n83=  var %i $hget(0)
n84=  while (%i > 0) {
n85=    echo -a %i > $hget(%i)
n86=    dec %i
n87=  }
n88=}
n89=
n90=#utilities end
n91=
n92=#dogesoak off
n93=
n94=on ^*:text:*:#dogecoin {
n95=  if ($nick != CodicAI) {
n96=    hadd -m SFC LastSpeak $nick
n97=    hinc -mz SFC LineScore $iif($nick isin %sfctrolls,10,$iif($nick = $hget(SFC,LastSpeak),5,3))
n98=    if ($hget(SFC,LineScore) < 10) { 
n99=      echo -a 0,7Linescore is within acceptable parameters 
n100=      msg #dogecoin-silent 0,7Linescore is within acceptable parameters @ $hget(SFC,LineScore) < Approx. $duration($hget(SFC,LineScore)) > (Calculated with certain criteria, new speakers add 3s, repeat speakers add 5, $&
n101=        trolls and fails to keep the silence add 10s)
n102=    }
n103=  }
n104=}
n105=
n106=on CAI:text:DED*:#dogecoin {
n107=  hinc -mu3600 SFC Count
n108=  echo -a 6,4RUINED IT: $hget(SFC,LastSpeak) @ $4 seconds left > Linescore is $hget(SFC,LineScore)
n109=  msg #dogecoin-silent No. $+ $hget(SFC,Count) 6,4RUINED IT: $hget(SFC,LastSpeak) @ $4 seconds left > Linescore is $hget(SFC,LineScore) < Approx. $duration($hget(SFC,LineScore)) >
n110=  if ($hget(SFC,LineScore) < 11) { 
n111=    echo -a 0,7Linescore is within acceptable parameters 
n112=    msg #dogecoin-silent 0,7Linescore is within acceptable parameters @ $hget(SFC,LineScore) < Approx. $duration($hget(SFC,LineScore)) > (Calculated with certain criteria, new speakers add 3s, repeat speakers add 5, $&
n113=      trolls and fails to keep the silence add 10s)
n114=  }
n115=  hinc -mz SFC LineScore 10
n116=}
n117=
n118=on CAI:text:*minutes*:#dogecoin {
n119=  hadd -u30 SFC LineScore 0
n120=}
n121=
n122=alias ls {
n123=  echo -a Linescore is $hget(SFC,LineScore)
n124=}
n125=
n126=alias lsb {
n127=  echo -a Linescore is $hget(SFC,LineScore)
n128=  msg #dogecoin-silent Linescore is $hget(SFC,LineScore) < Approx. $duration($hget(SFC,LineScore)) > (Calculated with certain criteria, new speakers add 3s, repeat speakers add 5, $&
n129=    trolls and fails to keep the silence add 10s)
n130=}
n131=
n132=alias ta {
n133=  set %sfctrolls %sfctrolls $$1
n134=  echo -a 2Troll List: %sfctrolls
n135=}
n136=
n137=;;on ^*:text:*:#dogecoin: { 
n138=;;var %r $r(1,25)
n139=;;var %e $r(1,25)
n140=;;if ((%r == %e) && (%nospam != 1)) {
n141=;;//msg $chan $gettok(%p,%e,44)
n142=;;//echo -a #dogecoin -> $gettok(%p,%e,44)
n143=;;//set $eval($+(-u,$r(2880,3000))) %nospam 1
n144=;;inc %dsexec
n145=;;}
n146=;;}
n147=
n148=#dogesoak end
n149=
n150=#miscaliases on
n151=
n152=alias tkq { return Use, but never overuse IRC, then you will also be happy within IRC } 
n153=alias tkk { kick $$1 $2 $tkq }
n154=
n155=alias tk { kick $chan $$1 $tkq }
n156=
n157=
n158=#miscaliases end
